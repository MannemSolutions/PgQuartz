debug: true
#runOnRoleError: true
#logFile: ./tmp
#git:
#  remote: https
#workdir: "jobs/jobspec1/"
steps:
  awesome0:
    commands:
      - name: Run step 1
        role: primary
        type: pg
        file: sql.sql
  awesome1:
    commands:
      - name: Run step 1
        type: pg
        inline: select oid, datname from pg_database
    matrix:
      delay: ["1", "2", "3"]
      desc: ["A", "B", "C"]
    depends:
      - awesome0
  awesome2:
    commands:
      - name: Run step 2
        type: pg
        file: commands/step2.sql
    matrix:
      delay: ["1", "2", "3"]
      desc: ["A", "B", "C"]
    depends:
      - awesome1
    when:
      - "eq .Steps.awesome1.Rc 0"
      - '.Steps.awesome1.Instances.StdOut.Contains "{oid}={13694}"'
  awesome3:
    commands:
      - name: Run step 3
        type: shell
        file: commands/step3.sh
    matrix:
      delay: ["1", "2", "3"]
      desc: ["A", "B", "C"]
    depends:
      # awesome2 and awesome3 run in parallel after awesome1
      - awesome1
  awesome4:
    commands:
      - name: Run step 4
        type: shell
        inline: ls
    depends:
      # awesome4 runs when awesome 2 and awesome3 are done
      - awesome2
      - awesome3
    when:
      - '.Steps.awesome3.Instances.StdOut.Contains "Mijn PID"'

checks:
  - name: myexport exists
    type: shell
    inline: test -f /data/myexport.sql
    rc: 1
  - name: check 1
    type: pg
    inline: "select * from pg_database where datname = :dbname"
    matrix:
      dbname:
        - "postgres"
        - "template0"
        - "template1"

target:
  # parallel, serial, once
  distribution: parallel
  repeat: 8
  delay: 3600

alerts:
- type: sql
  command: insert into alerttable values(now(), 'Oh dear')
- type: shell
  command: /opt/awesome/alerts/alert2.sh

connections:
  pg:
    type: postgresql
    # standby, primary, all
    role: all
    conn_params:
      host: localhost
      port: 52822
      user: postgres
      password: supassword

log:
- type: file
  path: /var/log/awesome/awesomerun.log
parallel: 2
timeout: 1h
etcdConfig:
  endpoints:
    - localhost:52820
  #lockKey: awesome
  lockTimeout: 1m
